@model StudentClassLibrary.Courses

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Courses</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DepartmentName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DepartmentName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LecturerName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LecturerName)
        </dd>
    </dl>
</div>
<h2>Enrolled Students</h2>

@if (Model.StudentCourses.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Age</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var studentCourse in Model.StudentCourses)
            {
                <tr>
                    <td>
                        <a asp-action="Details" asp-controller="Student" asp-route-id="@studentCourse.StudentID">
                            @studentCourse.Student.Name
                        </a>
                    </td>
                    <td>@studentCourse.Student.Age</td>
                    <td>@studentCourse.Student.EmailAddress</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No students are enrolled in this course.</p>
}
<div>
    <a asp-action="Edit" asp-route-id="@Model?.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
